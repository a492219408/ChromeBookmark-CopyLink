let jsonObj={};const templateB64='';let rules=new Map(Object.entries(jsonObj));rules.forEach((value,key)=>{rules.set(key,new Map(Object.entries(value)))});main();function main(){let status=false;if(rules.size>0){for(let[host,parameters]of rules){if(host.match(getCurTld()+"$")){let urlParameterMap=urlParameterToMap(window.location.search);let formatUrl;if(parameters.size>0&&parameters.entries().next().value[0]!==""){parameters.forEach((value,key)=>{parameters.set(key,urlParameterMap.get(key))});formatUrl=window.location.origin+window.location.pathname+"?"+mapToUrlParameter(parameters)}else{formatUrl=window.location.origin+window.location.pathname}navigator.clipboard.readText().then((v)=>{if(v===formatUrl){if(confirm("是否删除该网站的复制规则？")){removeCurrentRule()}}}).catch(()=>{});status=true;fnCopy(formatUrl);break}else{status=false}}}if(!status){addRule()}}function addRule(){let parameterMap=new Map();let i=1;let urlParameters;let msgStr;if(window.location.search===""){if(confirm("当前链接没有参数，是否使用路径参数？")){parameterMap.set("","");saveRules(parameterMap);return}}else{urlParameters=mapToMultilineText(urlParameterToMap(window.location.search));msgStr="请输入第"+i+"个参数\n若输入空的参数将使用路径参数\n当前链接的参数列表：\n"+urlParameters}let parameter=prompt(msgStr);if(parameter===""){parameterMap.set("","")}else if(parameter){parameterMap.set(parameter,"");while(parameter){let display=urlParameterToMap(window.location.search);parameterMap.forEach((value,key)=>{display.delete(key)});if(display.size===0){saveRules(parameterMap);return}msgStr="请输入第"+ ++i+"个参数\n当前链接的参数列表（已隐藏添加过的参数）：\n"+mapToMultilineText(display);parameter=prompt(msgStr);if(parameter===""){break}else if(parameter===null){return}parameterMap.set(parameter,"")}}else{return}saveRules(parameterMap)}function saveRules(parameterMap){rules.set(window.location.host,parameterMap);codeGenerator()}function removeCurrentRule(){rules.delete(window.location.host);codeGenerator()}function getCurTld(){let currentURL=window.location.host;let hostArr=currentURL.split(".");return hostArr[hostArr.length-2]+"."+hostArr[hostArr.length-1]}function mapToMultilineText(map){let text="";map.forEach((value,key)=>{value=typeof(value)=="undefined"?"":value;text+=key+": "+value+"\n"});return text}function urlParameterToMap(urlParameter){if(urlParameter.match("^\\?")){urlParameter=urlParameter.substring(1)}let parameterArr=urlParameter.split("&");let urlParameterMap=new Map();parameterArr.forEach((value)=>{let parameter=value.split("=");urlParameterMap.set(parameter[0],parameter[1])});return urlParameterMap}function mapToUrlParameter(parameterMap){let urlParameter="";parameterMap.forEach((value,key)=>{urlParameter+=key+"="+value+"&"});return urlParameter.substring(0,urlParameter.length-1)}function fnCopy(copyText){console.log(copyText);navigator.clipboard.writeText(copyText).then(()=>{}).catch(()=>{const input=document.createElement("input");document.body.appendChild(input);input.setAttribute("value",copyText);input.select();if(document.execCommand("copy",true)){document.execCommand("copy",true)}document.body.removeChild(input)})}function codeGenerator(){rules.forEach((value,key)=>{rules.set(key,Object.fromEntries(value))});jsonObj=Object.fromEntries(rules);let jsonStr=JSON.stringify(jsonObj);let exB64=["amF2YXNjcmlwdCUzQSUyMChmdW5jdGlvbiUyMCgpJTIwJTdC","JTdEKSgpJTNC"];let ex=[decodeURIComponent(atob(exB64[0])),decodeURIComponent(atob(exB64[1]))];let template=decodeURIComponent(atob(templateB64));let codeOut=ex[0]+template.replace(/(.*?let\sjsonObj=).*?(;.*?const\stemplateB64=').*?('.*)/gs,"$1"+jsonStr+"$2"+templateB64+"$3")+ex[1];fnCopy(codeOut);alert("新的代码已写入到剪贴板\n请将其替换到原有代码中\n新的规则将在下次使用时生效\n注意：可能会无法写入剪切板，可在浏览器控制台中查看打印的代码")}